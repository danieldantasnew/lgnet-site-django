/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-lg: 0.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-myfont: "Montserrat", sans-serif;
    --color-primary: #003465;
    --color-primary-variant: #2c72ac;
    --color-primary-variant-2: #2F4453;
    --color-primary-hover: #184c76;
    --color-secondary: #ffcd00;
    --color-secondary-variant: #2a2500;
    --color-secondary-hover: #C49000;
    --color-backgroundColor: #F9F9FA;
    --color-dark-primary: #232324;
    --color-dark-variant: #111111;
    --color-dark-variant-2: #2F2F2F;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .-start-\[17px\] {
    inset-inline-start: calc(17px * -1);
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .start-\[3px\] {
    inset-inline-start: 3px;
  }
  .-end-\[17px\] {
    inset-inline-end: calc(17px * -1);
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .-top-8 {
    top: calc(var(--spacing) * -8);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[124px\] {
    top: 124px;
  }
  .top-\[142px\] {
    top: 142px;
  }
  .top-\[178px\] {
    top: 178px;
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }
  .-bottom-8 {
    bottom: calc(var(--spacing) * -8);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-auto {
    margin: auto;
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .-mx-\[3px\] {
    margin-inline: calc(3px * -1);
  }
  .-mx-\[5px\] {
    margin-inline: calc(5px * -1);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-\[6px\] {
    margin-block: 6px;
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .-mt-\[2px\] {
    margin-top: calc(2px * -1);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-13 {
    margin-top: calc(var(--spacing) * 13);
  }
  .mt-14 {
    margin-top: calc(var(--spacing) * 14);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-\[1px\] {
    margin-top: 1px;
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-\[1px\] {
    margin-right: 1px;
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-\[1px\] {
    margin-bottom: 1px;
  }
  .mb-\[2px\] {
    margin-bottom: 2px;
  }
  .mb-\[3px\] {
    margin-bottom: 3px;
  }
  .ml-\[2px\] {
    margin-left: 2px;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-150 {
    height: calc(var(--spacing) * 150);
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-\[14px\] {
    height: 14px;
  }
  .h-\[18px\] {
    height: 18px;
  }
  .h-\[22px\] {
    height: 22px;
  }
  .h-\[46px\] {
    height: 46px;
  }
  .h-\[64px\] {
    height: 64px;
  }
  .h-\[560px\] {
    height: 560px;
  }
  .h-full {
    height: 100%;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-13 {
    width: calc(var(--spacing) * 13);
  }
  .w-\[3px\] {
    width: 3px;
  }
  .w-\[14px\] {
    width: 14px;
  }
  .w-\[22px\] {
    width: 22px;
  }
  .w-\[148px\] {
    width: 148px;
  }
  .w-\[272px\] {
    width: 272px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-full {
    width: 100%;
  }
  .container {
    max-width: 1240px !important;
  }
  .max-w-96 {
    max-width: calc(var(--spacing) * 96);
  }
  .max-w-106 {
    max-width: calc(var(--spacing) * 106);
  }
  .max-w-\[84rem\] {
    max-width: 84rem;
  }
  .flex-auto {
    flex: auto;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .grid-cols-\[1fr_1\.1fr\] {
    grid-template-columns: 1fr 1.1fr;
  }
  .grid-cols-\[minmax\(0\,_480px\)_auto\] {
    grid-template-columns: minmax(0, 480px) auto;
  }
  .grid-cols-\[repeat\(4\,minmax\(150px\,280px\)\)\] {
    grid-template-columns: repeat(4,minmax(150px,280px));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-13 {
    gap: calc(var(--spacing) * 13);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .gap-\[6px\] {
    gap: 6px;
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-center {
    align-self: center;
  }
  .justify-self-center {
    justify-self: center;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-\[2\.5rem\] {
    border-radius: 2.5rem;
  }
  .rounded-\[2rem\] {
    border-radius: 2rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-s-lg {
    border-start-start-radius: var(--radius-lg);
    border-end-start-radius: var(--radius-lg);
  }
  .rounded-e-lg {
    border-start-end-radius: var(--radius-lg);
    border-end-end-radius: var(--radius-lg);
  }
  .rounded-b-\[1rem\] {
    border-bottom-right-radius: 1rem;
    border-bottom-left-radius: 1rem;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[14px\] {
    border-style: var(--tw-border-style);
    border-width: 14px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-neutral-900 {
    border-color: var(--color-neutral-900);
  }
  .bg-\[\#f9fafb\] {
    background-color: #f9fafb;
  }
  .bg-\[\#ffffff\] {
    background-color: #ffffff;
  }
  .bg-\[\#ffffff\]\/10 {
    background-color: color-mix(in oklab, #ffffff 10%, transparent);
  }
  .bg-backgroundColor {
    background-color: var(--color-backgroundColor);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-900 {
    background-color: var(--color-neutral-900);
  }
  .bg-primary-variant {
    background-color: var(--color-primary-variant);
  }
  .bg-primary-variant\/10 {
    background-color: color-mix(in srgb, #2c72ac 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary-variant) 10%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-18 {
    padding-block: calc(var(--spacing) * 18);
  }
  .py-26 {
    padding-block: calc(var(--spacing) * 26);
  }
  .py-36 {
    padding-block: calc(var(--spacing) * 36);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .font-myfont {
    font-family: var(--font-myfont);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[\.9rem\] {
    font-size: .9rem;
  }
  .text-\[8px\] {
    font-size: 8px;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[16px\] {
    font-size: 16px;
  }
  .text-\[32px\] {
    font-size: 32px;
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-20 {
    --tw-leading: calc(var(--spacing) * 20);
    line-height: calc(var(--spacing) * 20);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[\.1rem\] {
    --tw-tracking: .1rem;
    letter-spacing: .1rem;
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .text-\[\#ffffff\] {
    color: #ffffff;
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-primary-variant {
    color: var(--color-primary-variant);
  }
  .text-primary-variant-2 {
    color: var(--color-primary-variant-2);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .shadow-\[0_0_0_2px_rgba\(0\,0\,0\,0\.2\)\] {
    --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(0,0,0,0.2));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_0_1px_1\.5px_rgba\(0\,0\,0\,\.1\)\] {
    --tw-shadow: 0 0 1px 1.5px var(--tw-shadow-color, rgba(0,0,0,.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .content-\[\'\'\] {
    --tw-content: '';
    content: var(--tw-content);
  }
  .\*\:mb-4 {
    :is(& > *) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .\*\:-ml-1 {
    :is(& > *) {
      margin-left: calc(var(--spacing) * -1);
    }
  }
  .\*\:flex {
    :is(& > *) {
      display: flex;
    }
  }
  .\*\:h-10 {
    :is(& > *) {
      height: calc(var(--spacing) * 10);
    }
  }
  .\*\:h-12 {
    :is(& > *) {
      height: calc(var(--spacing) * 12);
    }
  }
  .\*\:h-14 {
    :is(& > *) {
      height: calc(var(--spacing) * 14);
    }
  }
  .\*\:h-full {
    :is(& > *) {
      height: 100%;
    }
  }
  .\*\:w-10 {
    :is(& > *) {
      width: calc(var(--spacing) * 10);
    }
  }
  .\*\:w-20 {
    :is(& > *) {
      width: calc(var(--spacing) * 20);
    }
  }
  .\*\:w-24 {
    :is(& > *) {
      width: calc(var(--spacing) * 24);
    }
  }
  .\*\:w-38 {
    :is(& > *) {
      width: calc(var(--spacing) * 38);
    }
  }
  .\*\:w-full {
    :is(& > *) {
      width: 100%;
    }
  }
  .\*\:cursor-pointer {
    :is(& > *) {
      cursor: pointer;
    }
  }
  .\*\:items-center {
    :is(& > *) {
      align-items: center;
    }
  }
  .\*\:gap-2 {
    :is(& > *) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .\*\:gap-x-2 {
    :is(& > *) {
      column-gap: calc(var(--spacing) * 2);
    }
  }
  .\*\:rounded-\[6px\] {
    :is(& > *) {
      border-radius: 6px;
    }
  }
  .\*\:border-\[\#ffffff\] {
    :is(& > *) {
      border-color: #ffffff;
    }
  }
  .\*\:bg-\[\#202427\]\/90 {
    :is(& > *) {
      background-color: color-mix(in oklab, #202427 90%, transparent);
    }
  }
  .\*\:bg-\[\#ffffff\] {
    :is(& > *) {
      background-color: #ffffff;
    }
  }
  .\*\:fill-neutral-500 {
    :is(& > *) {
      fill: var(--color-neutral-500);
    }
  }
  .\*\:fill-primary-variant-2 {
    :is(& > *) {
      fill: var(--color-primary-variant-2);
    }
  }
  .\*\:px-4 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .\*\:py-2 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\*\:text-sm {
    :is(& > *) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\*\:text-xl {
    :is(& > *) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .\*\:text-\[17px\] {
    :is(& > *) {
      font-size: 17px;
    }
  }
  .\*\:font-semibold {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\*\:text-primary-variant-2 {
    :is(& > *) {
      color: var(--color-primary-variant-2);
    }
  }
  .\*\:transition-all {
    :is(& > *) {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\*\*\:cursor-pointer {
    :is(& *) {
      cursor: pointer;
    }
  }
  .\*\*\:fill-\[\#ffffff\] {
    :is(& *) {
      fill: #ffffff;
    }
  }
  .\*\*\:fill-neutral-500 {
    :is(& *) {
      fill: var(--color-neutral-500);
    }
  }
  .\*\*\:fill-primary-variant-2 {
    :is(& *) {
      fill: var(--color-primary-variant-2);
    }
  }
  .\*\*\:fill-white {
    :is(& *) {
      fill: var(--color-white);
    }
  }
  .\*\*\:tracking-tighter {
    :is(& *) {
      --tw-tracking: var(--tracking-tighter);
      letter-spacing: var(--tracking-tighter);
    }
  }
  .\*\*\:transition-all {
    :is(& *) {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .group-hover\:text-\[\#ffffff\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: #ffffff;
      }
    }
  }
  .group-hover\:\*\:fill-\[\#ffffff\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        :is(& > *) {
          fill: #ffffff;
        }
      }
    }
  }
  .group-hover\:\*\*\:fill-\[\#ffffff\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        :is(& *) {
          fill: #ffffff;
        }
      }
    }
  }
  .peer-checked\:translate-x-6 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 6);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:\*\:rotate-180 {
    &:is(:where(.peer):checked ~ *) {
      :is(& > *) {
        rotate: 180deg;
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:-bottom-\[6px\] {
    &::before {
      content: var(--tw-content);
      bottom: calc(6px * -1);
    }
  }
  .before\:inline-block {
    &::before {
      content: var(--tw-content);
      display: inline-block;
    }
  }
  .before\:h-1 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 1);
    }
  }
  .before\:h-\[3px\] {
    &::before {
      content: var(--tw-content);
      height: 3px;
    }
  }
  .before\:w-1 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .before\:w-9 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 9);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-\[\#ffffff\] {
    &::before {
      content: var(--tw-content);
      background-color: #ffffff;
    }
  }
  .before\:bg-secondary {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-secondary);
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .group-hover\:before\:bg-\[\#ffffff\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: #ffffff;
        }
      }
    }
  }
  .after\:inline-block {
    &::after {
      content: var(--tw-content);
      display: inline-block;
    }
  }
  .after\:h-1 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 1);
    }
  }
  .after\:w-1 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:bg-\[\#ffffff\] {
    &::after {
      content: var(--tw-content);
      background-color: #ffffff;
    }
  }
  .hover\:bg-primary-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-hover);
      }
    }
  }
  .hover\:bg-primary-variant {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-variant);
      }
    }
  }
  .hover\:bg-primary-variant-2 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-variant-2);
      }
    }
  }
  .hover\:bg-slate-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-100);
      }
    }
  }
  .hover\:text-\[\#ffffff\] {
    &:hover {
      @media (hover: hover) {
        color: #ffffff;
      }
    }
  }
  .hover\:text-primary-hover {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-hover);
      }
    }
  }
  .hover\:text-slate-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-300);
      }
    }
  }
  .\*\:hover\:bg-primary-variant {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-primary-variant);
        }
      }
    }
  }
  .\*\:hover\:\*\:text-primary-variant {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          :is(& > *) {
            color: var(--color-primary-variant);
          }
        }
      }
    }
  }
  .hover\:\*\*\:fill-slate-300 {
    &:hover {
      @media (hover: hover) {
        :is(& *) {
          fill: var(--color-slate-300);
        }
      }
    }
  }
  .\*\*\:hover\:text-secondary {
    :is(& *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-secondary);
        }
      }
    }
  }
  .\*\*\:hover\:text-slate-300 {
    :is(& *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-slate-300);
        }
      }
    }
  }
  .hover\:\*\*\:transition-all {
    &:hover {
      @media (hover: hover) {
        :is(& *) {
          transition-property: all;
          transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
          transition-duration: var(--tw-duration, var(--default-transition-duration));
        }
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .aria-\[current\=false\]\:bg-slate-100 {
    &[aria-current="false"] {
      background-color: var(--color-slate-100);
    }
  }
  .aria-\[current\=true\]\:bg-\[var\(--primary-variant\)\] {
    &[aria-current="true"] {
      background-color: var(--primary-variant);
    }
  }
  .rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .rtl\:space-x-reverse {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 1;
      }
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:border-gray-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:border-gray-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:bg-\[\#ffffff\] {
    &:where(.dark, .dark *) {
      background-color: #ffffff;
    }
  }
  .dark\:bg-dark-primary {
    &:where(.dark, .dark *) {
      background-color: var(--color-dark-primary);
    }
  }
  .dark\:bg-dark-variant {
    &:where(.dark, .dark *) {
      background-color: var(--color-dark-variant);
    }
  }
  .dark\:bg-dark-variant-2 {
    &:where(.dark, .dark *) {
      background-color: var(--color-dark-variant-2);
    }
  }
  .dark\:bg-gray-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-primary-variant-2 {
    &:where(.dark, .dark *) {
      background-color: var(--color-primary-variant-2);
    }
  }
  .dark\:bg-secondary {
    &:where(.dark, .dark *) {
      background-color: var(--color-secondary);
    }
  }
  .dark\:bg-secondary\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #ffcd00 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
      }
    }
  }
  .dark\:text-\[\#ffffff\] {
    &:where(.dark, .dark *) {
      color: #ffffff;
    }
  }
  .dark\:text-dark-variant {
    &:where(.dark, .dark *) {
      color: var(--color-dark-variant);
    }
  }
  .dark\:text-gray-800 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-800);
    }
  }
  .dark\:text-secondary {
    &:where(.dark, .dark *) {
      color: var(--color-secondary);
    }
  }
  .dark\:text-secondary-variant {
    &:where(.dark, .dark *) {
      color: var(--color-secondary-variant);
    }
  }
  .dark\:shadow-\[0_0_0_1px_rgba\(255\,255\,255\,0\.5\)\] {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 0 0 1px var(--tw-shadow-color, rgba(255,255,255,0.5));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-\[0_0_1px_1\.5px_rgb\(255\,255\,255\)\] {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 0 1px 1.5px var(--tw-shadow-color, rgb(255,255,255));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-\[0_0_1px_2px_rgb\(255\,255\,255\)\] {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 0 1px 2px var(--tw-shadow-color, rgb(255,255,255));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-gray-800 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: oklch(27.8% 0.033 256.848);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-gray-800) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:\*\:border-2 {
    &:where(.dark, .dark *) {
      :is(& > *) {
        border-style: var(--tw-border-style);
        border-width: 2px;
      }
    }
  }
  .dark\:\*\:fill-\[\#ffffff\] {
    &:where(.dark, .dark *) {
      :is(& > *) {
        fill: #ffffff;
      }
    }
  }
  .dark\:\*\:text-\[\#ffffff\] {
    &:where(.dark, .dark *) {
      :is(& > *) {
        color: #ffffff;
      }
    }
  }
  .dark\:\*\*\:fill-\[\#ffffff\] {
    &:where(.dark, .dark *) {
      :is(& *) {
        fill: #ffffff;
      }
    }
  }
  .dark\:\*\*\:fill-secondary-variant {
    &:where(.dark, .dark *) {
      :is(& *) {
        fill: var(--color-secondary-variant);
      }
    }
  }
  .dark\:\*\*\:fill-white {
    &:where(.dark, .dark *) {
      :is(& *) {
        fill: var(--color-white);
      }
    }
  }
  .dark\:hover\:bg-dark-variant {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-dark-variant);
        }
      }
    }
  }
  .dark\:hover\:bg-secondary {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-secondary);
        }
      }
    }
  }
  .dark\:hover\:bg-secondary-hover {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-secondary-hover);
        }
      }
    }
  }
  .dark\:hover\:text-secondary-hover {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-secondary-hover);
        }
      }
    }
  }
  .dark\:hover\:text-secondary-variant {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-secondary-variant);
        }
      }
    }
  }
  .dark\:hover\:shadow-\[0_0_0_2px_rgba\(255\,205\,0\,1\)\] {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 0 0 0 2px var(--tw-shadow-color, rgba(255,205,0,1));
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .dark\:\*\:hover\:bg-secondary {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-secondary);
          }
        }
      }
    }
  }
  .dark\:\*\:hover\:\*\:text-white {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &:hover {
          @media (hover: hover) {
            :is(& > *) {
              color: var(--color-white);
            }
          }
        }
      }
    }
  }
  .dark\:\*\:hover\:text-secondary-variant {
    &:where(.dark, .dark *) {
      :is(& > *) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-secondary-variant);
          }
        }
      }
    }
  }
  .\[\&\>div\>ul\]\:flex {
    &>div>ul {
      display: flex;
    }
  }
  .\[\&\>div\>ul\]\:flex-col {
    &>div>ul {
      flex-direction: column;
    }
  }
  .\[\&\>div\>ul\]\:gap-2 {
    &>div>ul {
      gap: calc(var(--spacing) * 2);
    }
  }
  .\[\&\>div\>ul\]\:text-sm {
    &>div>ul {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\[\&\>div\>ul\]\:font-medium {
    &>div>ul {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .\[\&\>div\>ul\]\:text-gray-50 {
    &>div>ul {
      color: var(--color-gray-50);
    }
  }
  .\[\&\>div\>ul\>li\>a\]\:hover\:text-secondary {
    &>div>ul>li>a {
      &:hover {
        @media (hover: hover) {
          color: var(--color-secondary);
        }
      }
    }
  }
  .\[\&\>li\>a\:hover\]\:underline {
    &>li>a:hover {
      text-decoration-line: underline;
    }
  }
}
@layer components {
  .container h1 {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    &:where(.dark, .dark *) {
      color: #ffffff;
    }
    font-size: 30px;
  }
  .container h1 > strong {
    color: var(--color-secondary);
    margin-left: 1.5px;
  }
  .essencial > :nth-child(even) {
    position: relative;
    top: calc(var(--spacing) * -8);
  }
  .essencial > div > h2 {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * -2);
    }
    &::before {
      content: var(--tw-content);
      display: inline-block;
    }
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 1);
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 12);
    }
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
    &::before {
      content: var(--tw-content);
      background-color: var(--color-secondary);
    }
    &::before {
      content: var(--tw-content);
      margin-right: calc(var(--spacing) * 2);
    }
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    display: flex;
    align-items: center;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
